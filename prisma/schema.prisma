generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Producto {
  id          Int       @id @default(autoincrement())
  nombre      String?   @db.VarChar(20)
  info        String?   @db.VarChar(255)
  precio      Float     @default(0)
  stock       Int       @default(0)
  estado      Boolean?  @default(true)
  marcaId     Int
  marca       Marca     @relation(fields: [marcaId], references: [id])
  categoriaId Int
  categoria   Categoria @relation(fields: [categoriaId], references: [id], onDelete: NoAction)
  proveedorId Int
  proveedor   Proveedor @relation(fields: [proveedorId], references: [id])
  ventaId     Int?
  venta       Venta?    @relation(fields: [ventaId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Pedido    Pedido[]

  @@index([categoriaId], map: "productos_categoriaId_fkey")
  @@index([marcaId], map: "productos_marcaId_fkey")
  @@index([proveedorId], map: "productos_proveedorId_fkey")
  @@index([ventaId], map: "productos_ventaId_fkey")
  @@map("productos")
}

model Categoria {
  id        Int        @id @default(autoincrement())
  nombre    String?    @db.VarChar(20)
  info      String?    @db.VarChar(255)
  estado    Boolean?   @default(true)
  productos Producto[]

  @@map("categorias")
}

model Marca {
  id          Int         @id @default(autoincrement())
  nombre      String?     @db.VarChar(20)
  info        String?     @db.VarChar(255)
  estado      Boolean?    @default(true)
  productos   Producto[]
  proveedores Proveedor[] @relation("marcatoproveedor")

  @@map("marcas")
}

model Cliente {
  id       Int      @id @default(autoincrement())
  nombre   String?  @db.VarChar(20)
  info     String?  @db.VarChar(255)
  estado   Boolean? @default(true)
  email    String?
  telefono String?
  deuda    Float    @default(0)
  pagos    Pago[]
  ventas   Venta[]

  @@map("clientes")
}

model Proveedor {
  id        Int        @id @default(autoincrement())
  nombre    String?    @db.VarChar(20)
  info      String?    @db.VarChar(255)
  estado    Boolean?   @default(true)
  email     String?
  telefono  String?
  productos Producto[]
  marcas    Marca[]    @relation("marcatoproveedor")

  @@map("proveedores")
}

model Venta {
  id        Int        @id @default(autoincrement())
  fecha     DateTime?  @default(now())
  info      String?    @db.VarChar(255)
  estado    Boolean?   @default(false)
  clienteId Int
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  productos Producto[]
  cliente   Cliente    @relation(fields: [clienteId], references: [id], map: "Venta_clienteId_fkey")

  @@index([clienteId], map: "Venta_clienteId_fkey")
  @@map("ventas")
}

model Pedido {
  id         Int      @id @default(autoincrement())
  clienteId  Int
  cantidad   Int
  pricio     Float
  total      Float
  productoId Int
  producto   Producto @relation(fields: [productoId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("pedidos")
}

model Pago {
  id        Int      @id @default(autoincrement())
  clienteId Int
  monto     Float
  fecha     DateTime @default(now())
  nota      String?
  cliente   Cliente  @relation(fields: [clienteId], references: [id])

  @@index([clienteId], map: "pagos_clienteId_fkey")
  @@map("pagos")
}
